"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/no-case@4.0.0";
exports.ids = ["vendor-chunks/no-case@4.0.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/no-case@4.0.0/node_modules/no-case/dist/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/no-case@4.0.0/node_modules/no-case/dist/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   noCase: () => (/* binding */ noCase),\n/* harmony export */   split: () => (/* binding */ split),\n/* harmony export */   toLower: () => (/* binding */ toLower),\n/* harmony export */   toUpper: () => (/* binding */ toUpper)\n/* harmony export */ });\n/**\n * Convert any string into a lower case string with spaces between words.\n */\nfunction noCase(input, options) {\n    return split(input, options)\n        .map(toLower(options?.locale))\n        .join(\" \");\n}\n// Regexps involved with splitting words in various case formats.\nconst SPLIT_LOWER_UPPER_RE = /([\\p{Ll}\\d])(\\p{Lu})/gu;\nconst SPLIT_UPPER_UPPER_RE = /(\\p{Lu})([\\p{Lu}][\\p{Ll}])/gu;\nconst SPLIT_NUMBER_LOWER_RE = /(\\d)(\\p{Ll})/gu;\nconst SPLIT_LETTER_NUMBER_RE = /(\\p{L})(\\d)/gu;\n// Regexp involved with stripping non-word characters from the result.\nconst DEFAULT_STRIP_REGEXP = /[^\\p{L}\\d]+/giu;\n// The replacement value for splits.\nconst SPLIT_REPLACE_VALUE = \"$1\\0$2\";\n/**\n * Split any cased input strings into an array of words.\n */\nfunction split(input, options = {}) {\n    let result = input\n        .replace(SPLIT_LOWER_UPPER_RE, SPLIT_REPLACE_VALUE)\n        .replace(SPLIT_UPPER_UPPER_RE, SPLIT_REPLACE_VALUE);\n    if (options.separateNumbers) {\n        result = result\n            .replace(SPLIT_NUMBER_LOWER_RE, SPLIT_REPLACE_VALUE)\n            .replace(SPLIT_LETTER_NUMBER_RE, SPLIT_REPLACE_VALUE);\n    }\n    result = result.replace(DEFAULT_STRIP_REGEXP, \"\\0\");\n    let start = 0;\n    let end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    if (start === end)\n        return [];\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(/\\0/g);\n}\nfunction toLower(locale) {\n    return locale === false\n        ? (input) => input.toLowerCase()\n        : (input) => input.toLocaleLowerCase(locale);\n}\nfunction toUpper(locale) {\n    return locale === false\n        ? (input) => input.toUpperCase()\n        : (input) => input.toLocaleUpperCase(locale);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbm8tY2FzZUA0LjAuMC9ub2RlX21vZHVsZXMvbm8tY2FzZS9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsR0FBRyxRQUFRLEdBQUc7QUFDakQsa0NBQWtDLEdBQUcsTUFBTSxHQUFHLEtBQUssR0FBRztBQUN0RCx1Q0FBdUMsR0FBRztBQUMxQyxvQ0FBb0MsRUFBRTtBQUN0QztBQUNBLG1DQUFtQyxFQUFFO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxrQ0FBa0M7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NpbXBsZXN3YXAvLi9ub2RlX21vZHVsZXMvLnBucG0vbm8tY2FzZUA0LjAuMC9ub2RlX21vZHVsZXMvbm8tY2FzZS9kaXN0L2luZGV4LmpzPzI2OWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb252ZXJ0IGFueSBzdHJpbmcgaW50byBhIGxvd2VyIGNhc2Ugc3RyaW5nIHdpdGggc3BhY2VzIGJldHdlZW4gd29yZHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBub0Nhc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gc3BsaXQoaW5wdXQsIG9wdGlvbnMpXG4gICAgICAgIC5tYXAodG9Mb3dlcihvcHRpb25zPy5sb2NhbGUpKVxuICAgICAgICAuam9pbihcIiBcIik7XG59XG4vLyBSZWdleHBzIGludm9sdmVkIHdpdGggc3BsaXR0aW5nIHdvcmRzIGluIHZhcmlvdXMgY2FzZSBmb3JtYXRzLlxuY29uc3QgU1BMSVRfTE9XRVJfVVBQRVJfUkUgPSAvKFtcXHB7TGx9XFxkXSkoXFxwe0x1fSkvZ3U7XG5jb25zdCBTUExJVF9VUFBFUl9VUFBFUl9SRSA9IC8oXFxwe0x1fSkoW1xccHtMdX1dW1xccHtMbH1dKS9ndTtcbmNvbnN0IFNQTElUX05VTUJFUl9MT1dFUl9SRSA9IC8oXFxkKShcXHB7TGx9KS9ndTtcbmNvbnN0IFNQTElUX0xFVFRFUl9OVU1CRVJfUkUgPSAvKFxccHtMfSkoXFxkKS9ndTtcbi8vIFJlZ2V4cCBpbnZvbHZlZCB3aXRoIHN0cmlwcGluZyBub24td29yZCBjaGFyYWN0ZXJzIGZyb20gdGhlIHJlc3VsdC5cbmNvbnN0IERFRkFVTFRfU1RSSVBfUkVHRVhQID0gL1teXFxwe0x9XFxkXSsvZ2l1O1xuLy8gVGhlIHJlcGxhY2VtZW50IHZhbHVlIGZvciBzcGxpdHMuXG5jb25zdCBTUExJVF9SRVBMQUNFX1ZBTFVFID0gXCIkMVxcMCQyXCI7XG4vKipcbiAqIFNwbGl0IGFueSBjYXNlZCBpbnB1dCBzdHJpbmdzIGludG8gYW4gYXJyYXkgb2Ygd29yZHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzcGxpdChpbnB1dCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgbGV0IHJlc3VsdCA9IGlucHV0XG4gICAgICAgIC5yZXBsYWNlKFNQTElUX0xPV0VSX1VQUEVSX1JFLCBTUExJVF9SRVBMQUNFX1ZBTFVFKVxuICAgICAgICAucmVwbGFjZShTUExJVF9VUFBFUl9VUFBFUl9SRSwgU1BMSVRfUkVQTEFDRV9WQUxVRSk7XG4gICAgaWYgKG9wdGlvbnMuc2VwYXJhdGVOdW1iZXJzKSB7XG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdFxuICAgICAgICAgICAgLnJlcGxhY2UoU1BMSVRfTlVNQkVSX0xPV0VSX1JFLCBTUExJVF9SRVBMQUNFX1ZBTFVFKVxuICAgICAgICAgICAgLnJlcGxhY2UoU1BMSVRfTEVUVEVSX05VTUJFUl9SRSwgU1BMSVRfUkVQTEFDRV9WQUxVRSk7XG4gICAgfVxuICAgIHJlc3VsdCA9IHJlc3VsdC5yZXBsYWNlKERFRkFVTFRfU1RSSVBfUkVHRVhQLCBcIlxcMFwiKTtcbiAgICBsZXQgc3RhcnQgPSAwO1xuICAgIGxldCBlbmQgPSByZXN1bHQubGVuZ3RoO1xuICAgIC8vIFRyaW0gdGhlIGRlbGltaXRlciBmcm9tIGFyb3VuZCB0aGUgb3V0cHV0IHN0cmluZy5cbiAgICB3aGlsZSAocmVzdWx0LmNoYXJBdChzdGFydCkgPT09IFwiXFwwXCIpXG4gICAgICAgIHN0YXJ0Kys7XG4gICAgaWYgKHN0YXJ0ID09PSBlbmQpXG4gICAgICAgIHJldHVybiBbXTtcbiAgICB3aGlsZSAocmVzdWx0LmNoYXJBdChlbmQgLSAxKSA9PT0gXCJcXDBcIilcbiAgICAgICAgZW5kLS07XG4gICAgLy8gVHJhbnNmb3JtIGVhY2ggdG9rZW4gaW5kZXBlbmRlbnRseS5cbiAgICByZXR1cm4gcmVzdWx0LnNsaWNlKHN0YXJ0LCBlbmQpLnNwbGl0KC9cXDAvZyk7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9Mb3dlcihsb2NhbGUpIHtcbiAgICByZXR1cm4gbG9jYWxlID09PSBmYWxzZVxuICAgICAgICA/IChpbnB1dCkgPT4gaW5wdXQudG9Mb3dlckNhc2UoKVxuICAgICAgICA6IChpbnB1dCkgPT4gaW5wdXQudG9Mb2NhbGVMb3dlckNhc2UobG9jYWxlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b1VwcGVyKGxvY2FsZSkge1xuICAgIHJldHVybiBsb2NhbGUgPT09IGZhbHNlXG4gICAgICAgID8gKGlucHV0KSA9PiBpbnB1dC50b1VwcGVyQ2FzZSgpXG4gICAgICAgIDogKGlucHV0KSA9PiBpbnB1dC50b0xvY2FsZVVwcGVyQ2FzZShsb2NhbGUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/no-case@4.0.0/node_modules/no-case/dist/index.js\n");

/***/ })

};
;